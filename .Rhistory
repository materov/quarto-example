) -> xdf
xdf %>%
count(parts, wt = vals) %>%
ggplot(
aes(fill = parts, values = n)
) +
geom_waffle(
n_rows = 20,
size = 0.33,
colour = "white",
flip = TRUE
) +
scale_fill_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
xdf %>%
count(parts, wt = vals) %>%
ggplot(
aes(label = parts, values = n)
) +
geom_pictogram(
n_rows = 10,
aes(colour = parts),
flip = TRUE,
make_proportional = TRUE
) +
scale_color_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
) +
scale_label_pictogram(
name = NULL,
values = c("apple-alt", "bread-slice", "pizza-slice"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() +
theme(
legend.key.height = unit(2.25, "line"),
legend.text = element_text(size = 10, hjust = 0, vjust = 0.75)
)
xdf %>%
count(parts, wt = vals) %>%
ggplot(
aes(label = parts, values = n)
) +
geom_pictogram(
n_rows = 10,
aes(colour = parts),
flip = TRUE,
make_proportional = TRUE
) +
scale_color_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
) +
scale_label_pictogram(
name = NULL,
values = c("apple-alt", "bread-slice", "pizza-slice"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() +
theme(
legend.key.height = unit(2.25, "line"),
legend.text = element_text(size = 10, hjust = 0, vjust = 0.75)
)
xdf %>%
count(parts, wt = vals) %>%
ggplot(
aes(label = parts, values = n)
) +
geom_pictogram(
n_rows = 20,
size = 6,
aes(colour = parts),
flip = TRUE,
family = "Font Awesome 5 Free-Regular-400"
) +
scale_color_manual(
name = NULL,
values = c("#073f9c", "black", "#f34323"),
labels = c("BitBucket", "GitHub", "Other")
) +
scale_label_pictogram(
name = NULL,
values = c("bitbucket", "github", "git-alt"),
labels = c("BitBucket", "GitHub", "Other")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() +
theme(
legend.text = element_text(hjust = 0, vjust = 1)
)
xdf %>%
count(parts, wt = vals) %>%
ggplot(
aes(label = parts, values = n)
) +
geom_pictogram(
n_rows = 20,
size = 6,
aes(colour = parts),
flip = TRUE,
family = "FontAwesome5Brands-Regular"
) +
scale_color_manual(
name = NULL,
values = c("#073f9c", "black", "#f34323"),
labels = c("BitBucket", "GitHub", "Other")
) +
scale_label_pictogram(
name = NULL,
values = c("bitbucket", "github", "git-alt"),
labels = c("BitBucket", "GitHub", "Other")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() +
theme(
legend.text = element_text(hjust = 0, vjust = 1)
)
library(dplyr)
library(waffle)
storms %>%
filter(year >= 2010) %>%
count(year, status) -> storms_df
ggplot(
data = storms_df,
aes(fill = status, values = n)
) +
geom_waffle(
color = "white",
size = .25,
n_rows = 10,
flip = TRUE
) +
facet_wrap(
~year,
nrow = 1,
strip.position = "bottom"
) +
scale_x_discrete() +
scale_y_continuous(
labels = function(x) x * 10, # make this multiplier the same as n_rows
expand = c(0,0)
) +
ggthemes::scale_fill_tableau(name=NULL) +
coord_equal() +
labs(
x = "Year", y = "Count",
title = "Faceted Waffle Bar Chart",
subtitle = "{dplyr} storms data"
) +
theme_minimal(
base_family = "Roboto Condensed"
) +
theme(
panel.grid = element_blank(),
axis.ticks.y = element_line()
) +
guides(
fill = guide_legend(reverse = TRUE)
)
install.packages("ggthemes")
ggplot(
data = storms_df,
aes(fill = status, values = n)
) +
geom_waffle(
color = "white",
size = .25,
n_rows = 10,
flip = TRUE
) +
facet_wrap(
~year,
nrow = 1,
strip.position = "bottom"
) +
scale_x_discrete() +
scale_y_continuous(
labels = function(x) x * 10, # make this multiplier the same as n_rows
expand = c(0,0)
) +
ggthemes::scale_fill_tableau(name=NULL) +
coord_equal() +
labs(
x = "Year", y = "Count",
title = "Faceted Waffle Bar Chart",
subtitle = "{dplyr} storms data"
) +
theme_minimal(
base_family = "Roboto Condensed"
) +
theme(
panel.grid = element_blank(),
axis.ticks.y = element_line()
) +
guides(
fill = guide_legend(reverse = TRUE)
)
ggplot(
data = storms_df,
aes(fill = status, values = n)
) +
geom_waffle(
color = "white",
size = .25,
n_rows = 10,
flip = TRUE
) +
facet_wrap(
~year,
nrow = 1,
strip.position = "bottom"
) +
scale_x_discrete() +
scale_y_continuous(
labels = function(x) x * 10, # make this multiplier the same as n_rows
expand = c(0,0)
) +
ggthemes::scale_fill_tableau(name=NULL) +
coord_equal() +
labs(
x = "Year", y = "Count",
title = "Faceted Waffle Bar Chart",
subtitle = "{dplyr} storms data"
) +
theme_minimal(
base_family = "Roboto Condensed"
) +
theme(
panel.grid = element_blank(),
axis.ticks.y = element_line()
) +
guides(
fill = guide_legend(reverse = TRUE)
)
library(waffle)
library(magrittr)
library(hrbrthemes)
library(ggplot2)
library(dplyr)
data.frame(
parts = factor(rep(month.abb[1:3], 3), levels=month.abb[1:3]),
vals = c(10, 20, 30, 6, 14, 40, 30, 20, 10),
col = rep(c("navy", "black", "maroon"), 3),
fct = c(
rep("Thing 1", 3),
rep("Thing 2", 3),
rep("Thing 3", 3)
)
) -> xdf
xdf %>%
count(parts, wt = vals) %>%
ggplot(
aes(label = parts, values = n)
) +
geom_pictogram(
n_rows = 10,
aes(colour = parts),
flip = TRUE,
make_proportional = TRUE
) +
scale_color_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
) +
scale_label_pictogram(
name = NULL,
values = c("apple-alt", "bread-slice", "pizza-slice"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() +
theme(
legend.key.height = unit(2.25, "line"),
legend.text = element_text(size = 10, hjust = 0, vjust = 0.75)
)
xdf %>%
count(parts, wt = vals) %>%
ggplot(
aes(label = parts, values = n)
) +
geom_pictogram(
family = "Font Awesome 5 Free Solid",
n_rows = 10,
aes(colour = parts),
flip = TRUE,
make_proportional = TRUE
) +
scale_color_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
) +
scale_label_pictogram(
name = NULL,
values = c("apple-alt", "bread-slice", "pizza-slice"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() +
theme(
legend.key.height = unit(2.25, "line"),
legend.text = element_text(size = 10, hjust = 0, vjust = 0.75)
)
xdf %>%
count(parts, wt = vals) %>%
ggplot(
aes(label = parts, values = n)
) +
geom_pictogram(
family = "Font Awesome 5 Free Solid",
n_rows = 10,
aes(colour = parts),
flip = TRUE,
make_proportional = TRUE
) +
scale_color_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
) +
scale_label_pictogram(
name = NULL,
values = c("apple-alt", "bread-slice", "pizza-slice"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() +
theme(
legend.key.height = unit(2.25, "line"),
legend.text = element_text(size = 10, hjust = 0, vjust = 0.75)
)
xdf %>%
count(parts, wt = vals) %>%
ggplot(
aes(label = parts, values = n)
) +
geom_pictogram(
family = "Font Awesome 5 Free Solid",
n_rows = 10,
aes(colour = parts),
flip = TRUE,
make_proportional = TRUE
) +
scale_color_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Syringe", "Sammich", "Pizza")
) +
scale_label_pictogram(
name = NULL,
values = c("apple-alt", "bread-slice", "pizza-slice"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() +
theme(
legend.key.height = unit(2.25, "line"),
legend.text = element_text(size = 10, hjust = 0, vjust = 0.75)
)
xdf
library(waffle)
library(magrittr)
library(hrbrthemes)
library(ggplot2)
library(dplyr)
data.frame(
parts = factor(rep(month.abb[1:3], 3), levels=month.abb[1:3]),
vals = c(10, 20, 30, 6, 14, 40, 30, 20, 10),
col = rep(c("navy", "black", "maroon"), 3),
fct = c(
rep("Thing 1", 3),
rep("Thing 2", 3),
rep("Thing 3", 3)
)
) -> xdf
xdf
xdf %>%
count(parts, wt = vals) %>%
ggplot(
aes(label = parts, values = n)
) +
geom_pictogram(
family = "Font Awesome 5 Free Solid",
n_rows = 10,
aes(colour = parts),
flip = TRUE,
make_proportional = TRUE
) +
scale_color_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
)
xdf %>%
count(parts, wt = vals) %>%
ggplot(
aes(label = parts, values = n)
) +
geom_pictogram(
family = "Font Awesome 5 Free Solid",
n_rows = 10,
aes(colour = parts),
flip = TRUE,
make_proportional = TRUE
) +
scale_color_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Fruit", "Sammich", "Pizza")
) +
scale_label_pictogram(
name = NULL,
values = c("syringe", "bread-slice", "pizza-slice"),
labels = c("Fruit", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() +
theme(
legend.key.height = unit(2.25, "line"),
legend.text = element_text(size = 10, hjust = 0, vjust = 0.75)
)
xdf %>%
count(parts, wt = vals) %>%
ggplot(
aes(label = parts, values = n)
) +
geom_pictogram(
family = "Font Awesome 5 Free Solid",
n_rows = 10,
aes(colour = parts),
flip = TRUE,
make_proportional = TRUE
) +
scale_color_manual(
name = NULL,
values = c("#a40000", "#c68958", "#ae6056"),
labels = c("Уколы", "Sammich", "Pizza")
) +
scale_label_pictogram(
name = NULL,
values = c("syringe", "bread-slice", "pizza-slice"),
labels = c("Уколы", "Sammich", "Pizza")
) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() +
theme(
legend.key.height = unit(2.25, "line"),
legend.text = element_text(size = 10, hjust = 0, vjust = 0.75)
)
options(timeout = max(2000, getOption("timeout")))
install.packages("xgboost")
4^2 + 6^2
3^2 + 2^2
52/4
64 - 3*x^2
x = -4
64 - 3*x^2
3^2 + 6^2
4^2 + 2^2
(5/18-11/12)/(5/9)
-23/20
x = -7
11 x^2 - 490
11*x^2 - 490
3^2 + 3^2
5^2 + 8^2
89/3
5^2 + 5^2
3^2 + 3^2
5^2 + 5^2
(5/12-9/20)/(2/15)
x = -8
3*x^2 - 128
1^2 + 4^2
2^2 + (11-3)^2
68/17
2;17
2*17
(5/12+11/20)/(2/15)
x = -3
4*x^2 - 27
install.packages("languageserver")
install.packages(c("colorspace", "yaml"))
install.packages("rayrender")
install.packages("parallelly")
setwd("/Users/materov/ALL/@Quarto projects/quarto-example")
getwd()
library(rsconnect)
writeManifest()
install.packages(c("usethis", "uuid"))
